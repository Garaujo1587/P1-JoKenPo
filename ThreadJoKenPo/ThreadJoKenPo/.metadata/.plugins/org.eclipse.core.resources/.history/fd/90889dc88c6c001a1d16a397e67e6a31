/*Considere 2 times (Time A e Time B) de 5 integrantes.
Os integrantes são colocados frente a frente para que aconteçam duelos 1 x 1.
Os duelos são de JoKenPo (Pedra, Papel e Tesoura) em melhor de 5.
Os duelos podem acontecer simultaneamente, sempre determinando qual integrante
de cada grupo está participando do duelo.
A disputa é com escolha aleatória da opção para cada 1 dos combatentes, seguindo a
lógica:
Tesoura vence Papel
Papel vence Pedra
Pedra vence Tesoura
Ganha o duelo o combatente que tiver 3 vitórias. A partir daí, o duelo já deve
finalizar. Cada batalha do duelo deve ter seu resultado apresentado. E o final do
duelo, bem como seu vencedor também deve ser apresentado.
Ao final de cada duelo, a pontuação do time do vencedor deve ser incrementada e,
ao final de todas as batalhas, o time vencedor deve ser anunciado e o número de
duelos vencidos pelos seus combatentes.
*/

package view;

import java.util.ArrayList;
import java.util.concurrent.Semaphore;
import controller.ThreadJoKenPo;

public class Principal {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

		ArrayList<String> nomes = new ArrayList<>();

		nomes.add("Adriano");
		nomes.add("Robertinho");
		nomes.add("Leonardo");
		nomes.add("Gustavson");
		nomes.add("Alicinha");
		nomes.add("Colevatinho");
		nomes.add("Tigas");
		nomes.add("Karine");
		nomes.add("Shrek");
		nomes.add("Corona");
		
		int j = 1;
		

		for (int i = 0; i < nomes.size()-1; i+=2) {
			
			Thread jogador1 = new ThreadJoKenPo(nomes.get(i), nomes.get(j));
			jogador1.start();
			j+=2;
		}
	}
}
